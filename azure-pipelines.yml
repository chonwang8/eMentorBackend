# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core
trigger:
- master
pool:
  vmImage: "windows-latest"
variables:
  buildConfiguration: 'Release'
steps:

- task: NuGetCommand@2
  inputs:
    command: 'restore'
    restoreSolution: '**/*.sln'
    feedsToUse: 'select'

# - task: DotNetCoreCLI@2
#   inputs:
#     command: test
#     projects: '**/*Test/*.csproj'
#     arguments: '--configuration $(buildConfiguration'

- script: dotnet build --configuration $(buildConfiguration)
  displayName: 'dotnet build $(buildConfiguration)'

# - task: DotNetCoreCLI@2
#   inputs:
#     command: 'build'
#     projects: "WebApi/WebApi.csproj"
#     arguments: "--configuration $(buildConfiguration)"

- task: DotNetCoreCLI@2
  inputs:
    command: publish
    publishWebProjects: false
    arguments: '--configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
    zipAfterPublish: True

# - task: DotNetCoreCLI@2
#   displayName: 'dotnet publish --configuration $(buildConfiguration) --ouput $(Build.ArtifactStagingDiretory)'
#   inputs:
#     command: publish
#     publishWebProjects: false
#     projects: 'WebApi/WebApi.csproj'
#     arguments: '--configurtation $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
#     zipAfterPublish: True

# this code takes all the files in $(Build.ArtifactStagingDirectory) and uploads them as an artifact of your build.
- task: PublishBuildArtifacts@1
  displayName: 'publish artifacts'
  # inputs:
  #   pathtoPublish: '$(Build.ArtifactStagingDirectory)' 
  #   artifactName: 'API'